name: Deploy CloudSecure to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Initialize Terraform
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # Apply Terraform (create or update EC2)
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Get EC2 IP
        id: ec2-ip
        working-directory: ./terraform
        run: |
          IP=$(terraform output -raw instance_ip | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
          echo "::set-output name=ip::$IP"
      
      - name: Deploy Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ steps.ec2-ip.outputs.ip }} << 'EOF'
            sudo apt-get update
            sudo apt-get install -y docker-compose
            mkdir -p /home/ubuntu/cloudsecure
          EOF
          scp -i key.pem -r ./app ubuntu@${{ steps.ec2-ip.outputs.ip }}:/home/ubuntu/cloudsecure/
          scp -i key.pem docker-compose.yml ubuntu@${{ steps.ec2-ip.outputs.ip }}:/home/ubuntu/cloudsecure/
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ steps.ec2-ip.outputs.ip }} << 'EOF'
            cd /home/ubuntu/cloudsecure
            sudo docker-compose down
            sudo docker-compose up --build -d
          EOF