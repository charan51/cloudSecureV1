name: Direct SSH Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.HOST_IP }} >> ~/.ssh/known_hosts
      
      - name: Create deploy script
        run: |
          cat > deploy.sh << 'EOF'
          #!/bin/bash
          set -e
          
          # Define variables
          APP_DIR="/opt/cloudsecure"
          
          # Create app directory and set permissions
          sudo mkdir -p ${APP_DIR}
          sudo chmod 755 ${APP_DIR}
          sudo chown ${USER}:${USER} ${APP_DIR}
          
          # Create necessary subdirectories
          mkdir -p ${APP_DIR}/app/client
          mkdir -p ${APP_DIR}/app/server
          
          # Create basic docker-compose.yml
          cat > ${APP_DIR}/docker-compose.yml << 'COMPOSE_EOF'
          version: '3'
          
          services:
            web:
              image: nginx:alpine
              container_name: cloudsecure-web
              ports:
                - "80:80"
              volumes:
                - ./html:/usr/share/nginx/html
              restart: always
          COMPOSE_EOF
          
          # Create basic HTML file
          mkdir -p ${APP_DIR}/html
          cat > ${APP_DIR}/html/index.html << 'HTML_EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>CloudSecure Deployment</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 40px; line-height: 1.6; }
              h1 { color: #333; }
            </style>
          </head>
          <body>
            <h1>CloudSecure Deployment</h1>
            <p>This is a placeholder page for the CloudSecure application.</p>
            <p>Deployment timestamp: $(date)</p>
          </body>
          </html>
          HTML_EOF
          
          # Install Docker if not already installed
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ${USER}
            echo "Docker installed successfully"
          else
            echo "Docker already installed"
          fi
          
          # Install Docker Compose if not already installed
          if ! command -v docker-compose &> /dev/null; then
            echo "Installing Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            echo "Docker Compose installed successfully"
          else
            echo "Docker Compose already installed"
          fi
          
          # Start Docker Compose
          cd ${APP_DIR}
          docker-compose up -d
          
          echo "Deployment completed successfully!"
          EOF
          
          chmod +x deploy.sh
      
      - name: Deploy to EC2
        run: |
          # Run deployment script on the remote server
          ssh -o StrictHostKeyChecking=no -o ControlMaster=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.HOST_IP }} 'bash -s' < deploy.sh