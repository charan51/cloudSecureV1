name: CloudSecure CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'app/client/package-lock.json'
      
      - name: Install client dependencies
        run: cd app/client && npm ci
      
      - name: Run client tests
        run: cd app/client && npm test -- --watchAll=false
  
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/cloudsecure.pem
          chmod 600 ~/.ssh/cloudsecure.pem
          ssh-keygen -y -f ~/.ssh/cloudsecure.pem > ~/.ssh/cloudsecure.pub
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      
      - name: Terraform Init
        run: cd terraform && terraform init
      
      - name: Terraform Apply
        run: cd terraform && terraform apply -auto-approve
        
      - name: Get EC2 IP Address
        id: get-ip
        run: |
          cd terraform
          echo "instance_ip=$(terraform output -raw instance_public_ip)" >> $GITHUB_OUTPUT
      
      - name: Update Ansible hosts
        run: |
          sed -i "s/{{ instance_ip }}/${{ steps.get-ip.outputs.instance_ip }}/g" ansible/hosts.ini
      
      - name: Wait for SSH to become available
        run: |
          until ssh -i ~/.ssh/cloudsecure.pem -o StrictHostKeyChecking=no -o ConnectTimeout=5 ec2-user@${{ steps.get-ip.outputs.instance_ip }} "echo SSH available"; do
            echo "SSH not available yet..."
            sleep 10
          done

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Run Ansible playbook
        run: |
          cd ansible
          ansible-playbook deploy.yml
      
      - name: Verify Deployment
        run: |
          echo "Application deployed to http://${{ steps.get-ip.outputs.instance_ip }}"
          curl -s http://${{ steps.get-ip.outputs.instance_ip }}