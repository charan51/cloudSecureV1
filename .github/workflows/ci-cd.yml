name: Security AI CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  EC2_HOST: ec2-3-83-87-177.compute-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Build application
        run: |
          # Add your build commands here
          echo "Building application..."
          # Example: Building Docker images
          cd app/client || mkdir -p app/client
          # Build client image
          cd ../server || mkdir -p app/server
          # Build server image
    
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add host key
        run: ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts
      
      - name: Create Ansible configuration
        run: |
          # Create inventory file
          cat > inventory.ini << EOF
          [cloudsecure_instances]
          ${{ env.EC2_HOST }} ansible_user=ec2-user ansible_ssh_private_key_file=$HOME/.ssh/id_rsa

          [cloudsecure_instances:vars]
          ansible_python_interpreter=/usr/bin/python3
          EOF
          
          # Create ansible config
          cat > ansible.cfg << EOF
          [defaults]
          host_key_checking = False
          remote_tmp = /tmp/.ansible-${USER}/tmp
          EOF
          
          # Show created files for debugging
          echo "=== Inventory file: ==="
          cat inventory.ini
          echo "=== Ansible config: ==="
          cat ansible.cfg
      
      - name: Modify Ansible playbook
        run: |
          # Make backup of original playbook
          cp ansible/deploy.yml ansible/deploy.yml.orig
          
          # Remove firewalld task or make it optional
          sed -i 's/- name: Ensure firewalld is started/- name: Ensure firewalld is started\n  ignore_errors: yes/g' ansible/deploy.yml || echo "Sed command failed, manual edit may be needed"
          
          # Show modified playbook for debugging
          echo "=== Modified Ansible playbook: ==="
          grep -A 5 "firewalld" ansible/deploy.yml || echo "Firewalld section not found"
      
      - name: Run Ansible playbook
        run: |
          # Run with detailed debugging for troubleshooting
          ANSIBLE_CONFIG=ansible.cfg ansible-playbook -i inventory.ini ansible/deploy.yml -v
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          ANSIBLE_SSH_ARGS: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
