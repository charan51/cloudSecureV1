name: Security AI CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  INSTANCE_IP: ${{ secrets.INSTANCE_IP }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Build application
        run: |
          # Add your build commands here
          echo "Building application..."
          # Example: Building Docker images
          cd app/client
          docker build -t security-ai-client .
          cd ../server
          docker build -t security-ai-server .
      
      - name: Test application
        run: |
          echo "Running tests..."
          # Add test commands here
    
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
      
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ec2-3-83-87-177.compute-1.amazonaws.com >> ~/.ssh/known_hosts
      
      - name: Configure AWS CLI for Ansible local commands
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/config
          echo "region = ${{ env.AWS_DEFAULT_REGION }}" >> ~/.aws/config
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
      
      - name: Create project environment files
        run: |
          # Create .env file for Docker Compose
          cat > .env << EOF
          ECR_REPOSITORY_URI=security-ai
          EOF
          
          # Create client .env file
          mkdir -p app/client
          cat > app/client/.env << EOF
          REACT_APP_API_URL=http://localhost:3000
          NODE_ENV=development
          EOF
          
          # Create server .env file
          mkdir -p app/server
          cat > app/server/.env << EOF
          PORT=3000
          NODE_ENV=development
          DB_HOST=db-service
          DB_USER=admin
          DB_PASSWORD=adminpassword
          DB_NAME=security_ai
          REDIS_HOST=redis-service
          MONGODB_URI=mongodb://mongo-user:mongo-password@mongo-service:27017/cloudsecure?authSource=admin
          CLIENT_URL=http://localhost
          JWT_SECRET=temporary_secret_key
          EOF
      
      - name: Deploy with Ansible
        run: |
          echo "[cloudsecure_instances]" > inventory.ini
          echo "ec2-3-83-87-177.compute-1.amazonaws.com ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini
          echo "" >> inventory.ini
          echo "[cloudsecure_instances:vars]" >> inventory.ini
          echo "ansible_python_interpreter=/usr/bin/python3" >> inventory.ini
          
          # Create ansible config to disable host key checking
          echo "[defaults]" > ansible.cfg
          echo "host_key_checking = False" >> ansible.cfg
          
          # Run the deployment playbook with extra vars
          ANSIBLE_CONFIG=ansible.cfg ansible-playbook -i inventory.ini \
            -e "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -e "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e "aws_region=us-east-1" \
            ansible/deploy.yml
        env:
          AWS_DEFAULT_REGION: us-east-1

      - name: Set up Docker image names
        run: |
          echo "Setting up Docker image names..."
          # Create a .env file with the correct image references
          cat > ${GITHUB_WORKSPACE}/.env << EOF
          ECR_REPOSITORY_URI=security-ai
          EOF
          
          # Copy this file to the server if needed
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${GITHUB_WORKSPACE}/.env ec2-user@ec2-3-83-87-177.compute-1.amazonaws.com:/opt/cloudsecure/.env
