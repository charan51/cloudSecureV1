---
- name: Deploy CloudSecure Application
  hosts: cloudsecure_servers
  become: true
  vars:
    app_dir: /opt/cloudsecure

  tasks:
    - name: Update system packages
      yum:
        name: '*'
        state: latest
        update_only: yes

    - name: Install required packages
      yum:
        name:
          - docker
          - git
          - python3-pip
        state: present

    - name: Ensure pip is up to date
      pip:
        name: pip
        state: latest

    - name: Install Docker Python module
      pip:
        name: docker
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Copy application files
      synchronize:
        src: ../
        dest: "{{ app_dir }}"
        rsync_opts:
          - "--exclude=.git"
          - "--exclude=terraform"
          - "--exclude=ansible"
          - "--exclude=node_modules"
      become: false

    - name: Download Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Stop any running containers
      shell: cd {{ app_dir }} && docker-compose down
      ignore_errors: yes

    - name: Build and start containers
      shell: cd {{ app_dir }} && docker-compose up --build -d
      become: false

    - name: Check container status
      shell: cd {{ app_dir }} && docker-compose ps
      register: container_status
      become: false

    - name: Show container status
      debug:
        var: container_status.stdout_lines