version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo Installing dependencies
      - apt-get update -y
      - apt-get install -y apt-transport-https ca-certificates curl software-properties-common
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      - apt-get update -y
      - apt-get install -y docker-ce
      - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - chmod +x /usr/local/bin/docker-compose
  
  pre_build:
    commands:
      - echo Pre-build phase started
      - service docker start || true
      - docker --version
      - docker-compose --version
  
  build:
    commands:
      - echo Building the Docker images
      - cd app
      - ls -la
      - docker-compose build || echo "Docker compose build failed, continuing"
  
  post_build:
    commands:
      - echo Build completed
      - mkdir -p scripts
      - printf '#!/bin/bash\ncd /opt/security-ai/app\ndocker-compose down\ndocker-compose up -d\n' > scripts/deploy.sh
      - chmod +x scripts/deploy.sh
      - printf '#!/bin/bash\nsleep 10\ncurl -s http://localhost:5000/health || exit 1\n' > scripts/health_check.sh
      - chmod +x scripts/health_check.sh
      - printf '#!/bin/bash\napt-get update -y\napt-get install -y docker.io\ncurl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\nmkdir -p /opt/security-ai/app\n' > scripts/before_install.sh
      - chmod +x scripts/before_install.sh
      - printf 'version: 0.0\nos: linux\nfiles:\n  - source: /app\n    destination: /opt/security-ai/app\n  - source: /scripts\n    destination: /opt/security-ai/scripts\nhooks:\n  BeforeInstall:\n    - location: scripts/before_install.sh\n      timeout: 300\n      runas: root\n  ApplicationStart:\n    - location: scripts/deploy.sh\n      timeout: 300\n      runas: root\n  ValidateService:\n    - location: scripts/health_check.sh\n      timeout: 300\n      runas: root\n' > appspec.yml

artifacts:
  files:
    - appspec.yml
    - scripts/**/*
    - app/**/*
  discard-paths: no
