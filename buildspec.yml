version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo "Starting installation"
  
  build:
    commands:
      - echo "Starting build phase"
      - mkdir -p app scripts
      - echo "Hello World" > app/test.txt
      # Add your actual application build steps here
  
  post_build:
    commands:
      - echo "Starting post-build phase"
      
      # Create deployment script
      - |
        cat > scripts/deploy.sh << 'EOL'
        #!/bin/bash
        echo "Deployment started at $(date)"
        
        # Application deployment logic
        cd /opt/security-ai/app
        echo "Running application setup..."
        
        # If using Docker
        if command -v docker &> /dev/null; then
          echo "Docker is installed, setting up containers..."
          # docker compose up -d
        fi
        
        echo "Deployment completed at $(date)"
        EOL
      - chmod +x scripts/deploy.sh
      
      # Create installation script
      - |
        cat > scripts/before_install.sh << 'EOL'
        #!/bin/bash
        echo "Installation started at $(date)"
        
        # Create application directory
        mkdir -p /opt/security-ai/app
        
        # Install dependencies
        yum update -y
        amazon-linux-extras install -y docker
        yum install -y python3 python3-pip
        
        # Start services
        systemctl start docker
        systemctl enable docker
        
        echo "Installation completed at $(date)"
        EOL
      - chmod +x scripts/before_install.sh
      
      # Create appspec.yml for CodeDeploy
      - |
        cat > appspec.yml << 'EOL'
        version: 0.0
        os: linux
        files:
          - source: /app
            destination: /opt/security-ai/app
          - source: /scripts
            destination: /opt/security-ai/scripts
        hooks:
          BeforeInstall:
            - location: scripts/before_install.sh
              timeout: 300
              runas: root
          ApplicationStart:
            - location: scripts/deploy.sh
              timeout: 300
              runas: root
        EOL
      
      - echo "CodeDeploy configuration created successfully"

artifacts:
  files:
    - appspec.yml
    - scripts/**/*
    - app/**/*
  discard-paths: no