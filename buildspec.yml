version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo "Starting installation"
      - apt-get update -y
      - apt-get install -y docker.io curl
      - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - chmod +x /usr/local/bin/docker-compose
  
  pre_build:
    commands:
      - echo "Starting pre-build phase"
      - systemctl start docker || true
      - docker --version
      - docker-compose --version
  
  build:
    commands:
      - echo "Starting build phase"
      - ls -la
      - mkdir -p scripts
      - cd app || echo "No app directory, creating one"
      - ls -la || echo "Empty app directory"
      - docker-compose build || echo "Docker compose build failed"
      - cd ..
  
  post_build:
    commands:
      - echo "Starting post-build phase"
      # Deployment script
      - |
        cat > scripts/deploy.sh << 'EOL'
        #!/bin/bash
        cd /opt/security-ai/app
        docker-compose down || true
        docker-compose up -d
        EOL
      - chmod +x scripts/deploy.sh
      
      # Simplified health check script
      - |
        cat > scripts/health_check.sh << 'EOL'
        #!/bin/bash
        sleep 10
        docker ps | grep ai-threat-detection || exit 1
        EOL
      - chmod +x scripts/health_check.sh
      
      # Installation script
      - |
        cat > scripts/before_install.sh << 'EOL'
        #!/bin/bash
        apt-get update -y
        apt-get install -y docker.io
        systemctl start docker || true
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        mkdir -p /opt/security-ai/app
        EOL
      - chmod +x scripts/before_install.sh
      
      # Updated appspec.yml
      - |
        cat > appspec.yml << 'EOL'
        version: 0.0
        os: linux
        files:
          - source: /app
            destination: /opt/security-ai/app
          - source: /scripts
            destination: /opt/security-ai/scripts
        hooks:
          BeforeInstall:
            - location: scripts/before_install.sh
              timeout: 300
              runas: root
          ApplicationStart:
            - location: scripts/deploy.sh
              timeout: 300
              runas: root
          ValidateService:
            - location: scripts/health_check.sh
              timeout: 300
              runas: root
        EOL

artifacts:
  files:
    - appspec.yml
    - scripts/**/*
    - app/**/*
  discard-paths: no