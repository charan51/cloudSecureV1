version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo "Starting installation"
      - pip install ansible boto3 paramiko
      - ansible-galaxy collection install community.docker
  
  build:
    commands:
      - echo "Starting build phase"
      - mkdir -p app
      - echo "Hello World" > app/test.txt
  
  post_build:
    commands:
      - echo "Starting post-build phase"
      
      # Get SSH key from S3
      - |
        echo "Getting SSH key from S3..."
        BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name security-ai-stack --query "Stacks[0].Outputs[?OutputKey=='SecretsBucketName'].OutputValue" --output text)
        aws s3 cp s3://$BUCKET_NAME/ssh-keys/id_rsa /tmp/private_key.pem
        chmod 600 /tmp/private_key.pem
      
      # Alternatively, if you know the bucket name directly:
      # - aws s3 cp s3://security-ai-secrets-${SUFFIX}/ssh-keys/id_rsa /tmp/private_key.pem
      
      # Create ansible config
      - |
        cat > ansible/ansible.cfg << 'EOL'
        [defaults]
        host_key_checking = False
        timeout = 30
        pipelining = True
        
        [ssh_connection]
        retries = 3
        ssh_args = -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
        EOL
      
      # Create inventory
      - |
        cat > ansible/inventory.ini << EOL
        [cloudsecure_instances]
        $INSTANCE_IP ansible_user=ubuntu ansible_ssh_private_key_file=/tmp/private_key.pem
        
        [cloudsecure_instances:vars]
        ansible_python_interpreter=/usr/bin/python3
        EOL
      
      # Verify the key works
      - |
        echo "Validating SSH key..."
        ssh-keygen -y -f /tmp/private_key.pem || echo "Invalid key format"
        ssh -i /tmp/private_key.pem -o StrictHostKeyChecking=no -o ConnectTimeout=5 ubuntu@$INSTANCE_IP "echo Connected to \$(hostname)" || echo "SSH connection failed"
      
      # Run Ansible
      - |
        cd ansible
        ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory.ini deploy.yml -v

artifacts:
  files:
    - ansible/**/*
    - app/**/*
  discard-paths: no